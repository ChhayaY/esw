# Scripting Design

A decision has been made to implement Scripts using a Domain Specific Language (DSL) written in Scala instead of true scripts in a more dynamic scripting language (however, we still refer to them as Scripts). This is for several reasons:
 Scripts can be developed in an IDE, with full syntax checking and auto-completion support.
 Unit tests can easily be written using widely used testing frameworks.
 Scripts can be compiled, with compile-time error checking.
 Build tools can be used for bundle scripts into Sequencer applications.
 Code from other Scripts can be accessed and used more easily.
 Seamless integration with Common Software and Sequencer Framework.
 Scala features type safety (enhancing compile time error checking) and functional
programming (if desired).
 One less "glue" service layer implementation needed and one less new technology
added.
The most important feature of "scripting" languages that we wanted to retain is the ability to quickly modify and reload a script without recompiling and deploying software. Another important feature is interactivity. Scripting languages are usually based around a "shell" that allows interactive usage. A Sequence Component or Sequencer can be "logged into" and the user is presented with an interactive shell that accepts commands. These two scripting language features help make the Sequencer and Script a reasonable "script language".
All Scripts used for all TMT subsystems will be stored in a single script repository like any configuration-controlled software. This will make it easier to maintain, share, and access scripts from other projects and shared locations for the Sequencer at run-time.
Since all scripts for Sequencers will be available for use by any Sequencer, they will be stored in a Github repository with a front-end service called Script Service, providing easier collaboration (i.e. sharing of code) and maintaining a version history of each Script. After analysis, the Configuration Service, designed to obtain single Configuration Files, will not be used because of the expected sharing and inclusion of one script in another. To obtain the set of Scripts to be used in Sequencers, a simple git pull is used.